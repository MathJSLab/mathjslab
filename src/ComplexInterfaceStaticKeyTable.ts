import { ComplexInterfaceStaticKey } from './ComplexInterface';
export const ComplexInterfaceStaticKeyTable: ComplexInterfaceStaticKey[] = [
    'LOGICAL',
    'REAL',
    'COMPLEX',
    'defaultSettings',
    'settings',
    'isInstanceOf',
    'set',
    'setNumberType',
    'create',
    'realSet',
    'imagSet',
    'realApply',
    'imagApply',
    'from',
    'real',
    'imag',
    'realIsInteger',
    'imagIsInteger',
    'realIsFinite',
    'imagIsFinite',
    'realIsNaN',
    'imagIsNaN',
    'realIsNegative',
    'imagIsNegative',
    'realIsZero',
    'imagIsZero',
    'realIsPositive',
    'imagIsPositive',
    'realToNumber',
    'imagToNumber',
    'realLessThan',
    'imagLessThan',
    'realLessThanOrEqualTo',
    'imagLessThanOrEqualTo',
    'realEquals',
    'imagEquals',
    'realGreaterThanOrEqualTo',
    'imagGreaterThanOrEqualTo',
    'realGreaterThan',
    'imagGreaterThan',
    'parse',
    'unparseValue',
    'unparse',
    'unparseMathMLValue',
    'precedence',
    'unparseMathML',
    'copy',
    'toMaxPrecisionValue',
    'toMaxPrecision',
    'epsilonValue',
    'epsilon',
    'random',
    'eq',
    'ne',
    'compareValue',
    'cmp',
    'minMaxArrayReal',
    'minMaxArrayRealWithIndex',
    'minMaxArrayComplex',
    'minMaxArrayComplexWithIndex',
    'min',
    'minWise',
    'max',
    'maxWise',
    'lt',
    'le',
    'gt',
    'ge',
    'false',
    'true',
    'logical',
    'toLogical',
    'and',
    'or',
    'xor',
    'not',
    'zero',
    'one',
    'onediv2',
    'minusonediv2',
    'minusone',
    'pi',
    'pidiv2',
    'onei',
    'onediv2i',
    'minusonediv2i',
    'minusonei',
    'two',
    'sqrt2pi',
    'e',
    'NaN_0',
    'inf_0',
    'add',
    'sub',
    'neg',
    'mul',
    'rdiv',
    'ldiv',
    'inv',
    'power',
    'root',
    'absValue',
    'abs',
    'hypot',
    'arg',
    'conj',
    'mod',
    'rem',
    'fix',
    'ceil',
    'floor',
    'round',
    'sign',
    'sqrt',
    'exp',
    'log',
    'logb',
    'log2',
    'log10',
    'deg2rad',
    'rad2deg',
    'sin',
    'sind',
    'cos',
    'cosd',
    'tan',
    'tand',
    'csc',
    'cscd',
    'sec',
    'secd',
    'cot',
    'cotd',
    'asin',
    'asind',
    'acos',
    'acosd',
    'atan',
    'atand',
    'acsc',
    'acscd',
    'asec',
    'asecd',
    'acot',
    'acotd',
    'sinh',
    'cosh',
    'tanh',
    'csch',
    'sech',
    'coth',
    'asinh',
    'acosh',
    'atanh',
    'acsch',
    'asech',
    'acoth',
    'gamma',
    'factorial',
    'applyFunction',
    'mapFunction',
    'twoArgFunction'
];
